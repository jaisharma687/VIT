module carry_lookahead_adder (A,B,CarryIn,Sum,CarryOut);
  input [3:0] A;
  input [3:0] B;
  input CarryIn;
  output [3:0] Sum; 
  output CarryOut; 
  wire [3:0] G, P;
  wire [3:0] C;
  wire [3:0] S;
  assign G = A & B;
  assign P = A ^ B;
  assign C[0] = G[0] | (P[0] & CarryIn);
  assign C[1] = G[1] | (P[1] & C[0]);
  assign C[2] = G[2] | (P[2] & C[1]);
  assign C[3] = G[3] | (P[3] & C[2]);
  assign S[0] = P[0] | CarryIn;
  assign S[1] = P[1] | C[0];
  assign S[2] = P[2] | C[1];
  assign S[3] = P[3] | C[2];
  assign CarryOut = C[3];
endmodule
